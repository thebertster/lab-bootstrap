---
- name: "Create Virtual Service"
  hosts: "localhost"
  connection: "local"
  vars_files:
    - '{{ "site_" + deployment_site + ".yml" }}'
  vars:
    header_modification_actions:
      - action: "HTTP_ADD_HDR"
        hdr_index: 1
        hdr:
          name: "X-Forwarded-Host"
          value:
            var: "HTTP_POLICY_VAR_HTTP_HDR"
            val: "$http_host"

  tasks:
    - name: "Create VSVip"
      vmware.alb.avi_vsvip:
        avi_credentials: "{{ avi_credentials }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        tenant: '{{ avi_tenant | default("admin") }}'
        name: '{{ "vsvip-" + vs_parameters.name + "-" + cloud_parameters.name + ("-" + avi_tenant if avi_tenant is defined else "") }}'
        cloud_ref: '{{ "/api/cloud/?name=" + cloud_parameters.name }}'
        vip:
          - enabled: true
            auto_allocate_ip: true
            ipam_network_subnet: "{{ vs_parameters.ipam_network_subnet }}"
            vip_id: "1"
        dns_info:
          - fqdn: "{{ vs_parameters.fqdn }}"
      register: vsvip

    - name: "Create Pool"
      vmware.alb.avi_pool:
        avi_credentials: "{{ avi_credentials }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        tenant: '{{ avi_tenant | default("admin") }}'
        name: '{{ vs_parameters.name + "-pool" }}'
        lb_algorithm: "LB_ALGORITHM_ROUND_ROBIN"
        application_persistence_profile_ref: "/api/applicationpersistenceprofile/?name=Persist-PHPSESSID"
        health_monitor_refs:
          - "/api/healthmonitor/?name=System-HTTP"
        servers: "{{ vs_parameters.pool_members }}"
        cloud_ref: '{{ "/api/cloud/?name=" + cloud_parameters.name }}'
        analytics_policy:
          enable_realtime_metrics: >-
            {{ vs_parameters.realtime_metrics if vs_parameters.realtime_metrics is defined and
            avi_credentials.api_version < '31.1.1' else omit }}
          metrics_realtime_update: >-
            {{ {'duration': 0, 'enabled': vs_parameters.realtime_metrics}
            if vs_parameters.realtime_metrics is defined and avi_credentials.api_version >= '31.1.1' else omit }}
      register: pool

    - name: "Add Header Modification Actions for GSLB Site"
      ansible.builtin.set_fact:
        header_modification_actions: |
          {{ header_modification_actions +
            [{"action": "HTTP_ADD_HDR",
              "hdr_index": 2,
              "hdr": {
                "name": "X-Avi-Site",
                "value": {
                  "val": gslb_site_name
                }
              }
             }]
          }}
      when: gslb_site_name is defined

    - name: "Create HTTP PolicySet"
      vmware.alb.avi_httppolicyset:
        avi_credentials: "{{ avi_credentials }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        tenant: '{{ avi_tenant | default("admin") }}'
        name: '{{ vs_parameters.name + "-" + cloud_parameters.name + "-HTTP-PolicySet-0" }}'
        http_request_policy:
          rules:
            - name: "Header Modifications"
              index: 1
              enable: true
              hdr_action: "{{ header_modification_actions }}"
      register: http_policy_set

    - name: "Create Virtual Service"
      vmware.alb.avi_virtualservice:
        avi_credentials: "{{ avi_credentials }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        tenant: '{{ avi_tenant | default("admin") }}'
        name: "{{ vs_parameters.name }}"
        vsvip_ref: "{{ vsvip.obj.url }}"
        pool_ref: "{{ pool.obj.url }}"
        cloud_ref: '{{ "/api/cloud/?name=" + cloud_parameters.name }}'
        application_profile_ref: "/api/applicationprofile/?name=Standard-HTTPS-Profile"
        error_page_profile_ref: "/api/errorpageprofile/?name=Standard-Error-Page-Profile"
        services:
          - enable_ssl: false
            port: 80
          - enable_ssl: true
            port: 443
        enabled: true
        enable_rhi: "{{ vs_parameters.rhi | default(omit) }}"
        se_group_ref: "/api/serviceenginegroup/?name=Default-Group"
        http_policies:
          - http_policy_set_ref: "{{ http_policy_set.obj.url }}"
            index: 11
        ssl_key_and_certificate_refs:
          - "/api/sslkeyandcertificate/?name=Wildcard-ECDSA-Cert"
          - "/api/sslkeyandcertificate/?name=Wildcard-RSA-Cert"
        ssl_profile_ref: "/api/sslprofile/?name=System-Standard-PFS"
        analytics_policy:
          all_headers: true
          client_insights: NO_INSIGHTS
          full_client_logs:
            duration: 0
            enabled: >-
              {{ vs_parameters.non_sig_logs if vs_parameters.non_sig_logs is defined else
              (vs_parameters.client_log_filters is defined and avi_credentials.api_version < '31.1.1') }}
            throttle: 10
          metrics_realtime_update:
            enabled: "{{ vs_parameters.realtime_metrics | default(false) }}"
            duration: 0
          client_log_filters: >-
            {{ vs_parameters.client_log_filters if vs_parameters.client_log_filters is defined
            and avi_credentials.api_version >= '31.1.1' else omit }}
